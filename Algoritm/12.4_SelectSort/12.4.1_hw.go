package main

import (
	"fmt"
	"math/rand"
	//"testing"
	"time"
)

/*Сложность
В лучшем случае: O(n2)
В среднем случае: O(n2)
В худшем случае: O(n2)
Ёмкостная, в худшем: O(1)
*/

//Задание 12.4.1
//Реализуйте сортировку выбором Selection sort, работающую «слева направо»
//(поиск минимальных элементов и перемещение их в начало).

func init() {
	rand.Seed(time.Now().UnixNano()) // необходимо для того, чтобы рандом был похож на рандомный
}

func main() {
	//ar :=[]int{5, 3, 4, 1, 2}
	ar := []int{1, 5, 6, 0, 10, -7, 3, 8, 4, 2, 7}
	//ar := make([]int, 50)
	//for i := range ar {
	//	ar[i] = rand.Intn(200) - 100 // ограничиваем случайно значение от [-100;100]
	//}

	fmt.Printf("Unsorted list:\t%v\n", ar) //не отсортированный массив
	fmt.Println("")
	selectionSort(ar)
	fmt.Println("")
	fmt.Println("Длина слайса:", len(ar))
	fmt.Printf("Sorted list:\t%v\n", ar) //отсортированный масссив
}

// ваш код здесь
// Реализуйте сортировку выбором, работающую «слева направо»
//(поиск минимальных элементов и перемещение их в начало).
func selectionSort(ar []int) {
	for i := 0; i < len(ar)-1; i++ { //создаем переменную i типа int и присвоили ей значение 0
		// i - количество прогонов слайса,
		// i максимальное значние длина слайса минус 2
		fmt.Println("Прогон слайса с индекса №:", i)
		min := i                           //создаем переменную min - уменьшает при каждом прогоне слайс на 1 отсортированный элемент
		for j := i + 1; j < len(ar); j++ { //создаем переменную j и присвоили ей значени i + 1
			// j - индекс элемента слайса
			//j не больше чем длина слайса
			if ar[min] > ar[j] { //если элемент слайса больше
				min = j //земеняет минимальный элемент на
			}
		}
		if min != i {
			swap(ar, i, min) //передаем в функцию  swap значения ar , i , min)

		}
	}

}

func swap(ar []int, i, j int) {
	tmp := ar[i]
	ar[i] = ar[j]
	ar[j] = tmp

	//визуальное представление сортировки
	fmt.Printf("Сортировка ...:\t%v\n", ar)
	fmt.Println("Минимальное число в слайсе:", ar[i])
	fmt.Println("Значение в индексе №", i, "=", tmp, "меняем местами с индесом №", j, "=", ar[i])
	fmt.Println("")
}
