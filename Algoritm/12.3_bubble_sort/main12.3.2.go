package main

import (
	"fmt"
	"math/rand"
	"time"
)

//алгоритм сортировки пузырьком, который отсортирует массив int по возрастанию.
func init() {
	rand.Seed(time.Now().UnixNano()) // необходимо для того, чтобы рандом был похож на рандомный
}

func main() {
	ar := make([]int, 50)
	for i := range ar {
		ar[i] = rand.Intn(200) - 100 // ограничиваем случайно значение от [-100;100]
	}

	bubbleSort(ar)

	fmt.Println(ar)
}

//ваш код здесь
//У нас два цикла - первым мы последовательно берем ячейку (текущая ячейка),
//где у нас будет (в итоге) наимениший из оставшихся элементов,
//а вторым циклом пробегаем от выбранного элемента до конца массива,
//сравниваем пары элементов, если есть меньшее значение чем в текущей ячейке, то меняем местами.

func bubbleSort(ar []int) {
	for i := 0; i < len(ar); i++ {
		for j := i; j < len(ar); j++ {
			if ar[i] > ar[j] {
				temp(ar, i, j)
			}
		}
	}
}
func temp(ar []int, i, j int) {
	tmp := ar[i]
	ar[i] = ar[j]
	ar[j] = tmp

}
